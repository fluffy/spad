<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SPAD Spec Site</title>
    <link>https://fluffy.github.io/spad/index.xml</link>
    <description>Recent content on SPAD Spec Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>TODO6</copyright>
    <atom:link href="https://fluffy.github.io/spad/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title></title>
      <link>https://fluffy.github.io/spad/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fluffy.github.io/spad/api/</guid>
      <description>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&#34;utf-8&#34;&gt;&lt;title&gt;SPAD&lt;/title&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css&#34;&gt;&lt;style&gt;@import url(&#39;https://fonts.googleapis.com/css?family=Roboto:400,700|Inconsolata|Raleway:200&#39;);.hljs-comment,.hljs-title{color:#8e908c}.hljs-variable,.hljs-attribute,.hljs-tag,.hljs-regexp,.ruby .hljs-constant,.xml .hljs-tag .hljs-title,.xml .hljs-pi,.xml .hljs-doctype,.html .hljs-doctype,.css .hljs-id,.css .hljs-class,.css .hljs-pseudo{color:#c82829}.hljs-number,.hljs-preprocessor,.hljs-pragma,.hljs-built_in,.hljs-literal,.hljs-params,.hljs-constant{color:#f5871f}.ruby .hljs-class .hljs-title,.css .hljs-rules .hljs-attribute{color:#eab700}.hljs-string,.hljs-value,.hljs-inheritance,.hljs-header,.ruby .hljs-symbol,.xml .hljs-cdata{color:#718c00}.css .hljs-hexcolor{color:#3e999f}.hljs-function,.python .hljs-decorator,.python .hljs-title,.ruby .hljs-function .hljs-title,.ruby .hljs-title .hljs-keyword,.perl .hljs-sub,.javascript .hljs-title,.coffeescript .hljs-title{color:#4271ae}.hljs-keyword,.javascript .hljs-function{color:#8959a8}.hljs{display:block;background:white;color:#4d4d4c;padding:.5em}.coffeescript .javascript,.javascript .xml,.tex .hljs-formula,.xml .javascript,.xml .vbscript,.xml .css,.xml .hljs-cdata{opacity:.5}.right .hljs-comment{color:#969896}.right .css .hljs-class,.right .css .hljs-id,.right .css .hljs-pseudo,.right .hljs-attribute,.right .hljs-regexp,.right .hljs-tag,.right .hljs-variable,.right .html .hljs-doctype,.right .ruby .hljs-constant,.right .xml .hljs-doctype,.right .xml .hljs-pi,.right .xml .hljs-tag .hljs-title{color:#c66}.right .hljs-built_in,.right .hljs-constant,.right .hljs-literal,.right .hljs-number,.right .hljs-params,.right .hljs-pragma,.right .hljs-preprocessor{color:#de935f}.right .css .hljs-rule .hljs-attribute,.right .ruby .hljs-class .hljs-title{color:#f0c674}.right .hljs-header,.right .hljs-inheritance,.right .hljs-name,.right .hljs-string,.right .hljs-value,.right .ruby .hljs-symbol,.right .xml .hljs-cdata{color:#b5bd68}.right .css .hljs-hexcolor,.right .hljs-title{color:#8abeb7}.right .coffeescript .hljs-title,.right .hljs-function,.right .javascript .hljs-title,.right .perl .hljs-sub,.right .python .hljs-decorator,.right .python .hljs-title,.right .ruby .hljs-function .hljs-title,.right .ruby .hljs-title .hljs-keyword{color:#81a2be}.right .hljs-keyword,.right .javascript .hljs-function{color:#b294bb}.right .hljs{display:block;overflow-x:auto;background:#1d1f21;color:#c5c8c6;padding:.5em;-webkit-text-size-adjust:none}.right .coffeescript .javascript,.right .javascript .xml,.right .tex .hljs-formula,.right .xml .css,.right .xml .hljs-cdata,.right .xml .javascript,.right .xml .vbscript{opacity:.5}body{color:black;background:white;font:400 14px / 1.42 &#39;Roboto&#39;,Helvetica,sans-serif}header{border-bottom:1px solid #f2f2f2;margin-bottom:12px}h1,h2,h3,h4,h5{color:black;margin:12px 0}h1 .permalink,h2 .permalink,h3 .permalink,h4 .permalink,h5 .permalink{margin-left:0;opacity:0;transition:opacity .25s ease}h1:hover .permalink,h2:hover .permalink,h3:hover .permalink,h4:hover .permalink,h5:hover .permalink{opacity:1}.triple h1 .permalink,.triple h2 .permalink,.triple h3 .permalink,.triple h4 .permalink,.triple h5 .permalink{opacity:.15}.triple h1:hover .permalink,.triple h2:hover .permalink,.triple h3:hover .permalink,.triple h4:hover .permalink,.triple h5:hover .permalink{opacity:.15}h1{font:200 36px &#39;Raleway&#39;,Helvetica,sans-serif;font-size:36px}h2{font:200 36px &#39;Raleway&#39;,Helvetica,sans-serif;font-size:30px}h3{font-size:100%;text-transform:uppercase}h5{font-size:100%;font-weight:normal}p{margin:0 0 10px}p.choices{line-height:1.6}a{color:#428bca;text-decoration:none}li p{margin:0}hr.split{border:0;height:1px;width:100%;padding-left:6px;margin:12px auto;background-image:linear-gradient(to right, rgba(0,0,0,0) 20%, rgba(0,0,0,0.2) 51.4%, rgba(255,255,255,0.2) 51.4%, rgba(255,255,255,0) 80%)}dl dt{float:left;width:130px;clear:left;text-align:right;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-weight:700}dl dd{margin-left:150px}blockquote{color:rgba(0,0,0,0.5);font-size:15.5px;padding:10px 20px;margin:12px 0;border-left:5px solid #e8e8e8}blockquote p:last-child{margin-bottom:0}pre{background-color:#f5f5f5;padding:12px;border:1px solid #cfcfcf;border-radius:6px;overflow:auto}pre code{color:black;background-color:transparent;padding:0;border:none}code{color:#444;background-color:#f5f5f5;font:&#39;Inconsolata&#39;,monospace;padding:1px 4px;border:1px solid #cfcfcf;border-radius:3px}ul,ol{padding-left:2em}table{border-collapse:collapse;border-spacing:0;margin-bottom:12px}table tr:nth-child(2n){background-color:#fafafa}table th,table td{padding:6px 12px;border:1px solid #e6e6e6}.text-muted{opacity:.5}.note,.warning{padding:.3em 1em;margin:1em 0;border-radius:2px;font-size:90%}.note h1,.warning h1,.note h2,.warning h2,.note h3,.warning h3,.note h4,.warning h4,.note h5,.warning h5,.note h6,.warning h6{font-family:200 36px &#39;Raleway&#39;,Helvetica,sans-serif;font-size:135%;font-weight:500}.note p,.warning p{margin:.5em 0}.note{color:black;background-color:#f0f6fb;border-left:4px solid #428bca}.note h1,.note h2,.note h3,.note h4,.note h5,.note h6{color:#428bca}.warning{color:black;background-color:#fbf1f0;border-left:4px solid #c9302c}.warning h1,.warning h2,.warning h3,.warning h4,.warning h5,.warning h6{color:#c9302c}header{margin-top:24px}nav{position:fixed;top:24px;bottom:0;overflow-y:auto}nav .resource-group{padding:0}nav .resource-group .heading{position:relative}nav .resource-group .heading .chevron{position:absolute;top:12px;right:12px;opacity:.5}nav .resource-group .heading a{display:block;color:black;opacity:.7;border-left:2px solid transparent;margin:0}nav .resource-group .heading a:hover{text-decoration:none;background-color:bad-color;border-left:2px solid black}nav ul{list-style-type:none;padding-left:0}nav ul a{display:block;font-size:13px;color:rgba(0,0,0,0.7);padding:8px 12px;border-top:1px solid #d9d9d9;border-left:2px solid transparent;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}nav ul a:hover{text-decoration:none;background-color:bad-color;border-left:2px solid black}nav ul&gt;li{margin:0}nav ul&gt;li:first-child{margin-top:-12px}nav ul&gt;li:last-child{margin-bottom:-12px}nav ul ul a{padding-left:24px}nav ul ul li{margin:0}nav ul ul li:first-child{margin-top:0}nav ul ul li:last-child{margin-bottom:0}nav&gt;div&gt;div&gt;ul&gt;li:first-child&gt;a{border-top:none}.preload *{transition:none !important}.pull-left{float:left}.pull-right{float:right}.badge{display:inline-block;float:right;min-width:10px;min-height:14px;padding:3px 7px;font-size:12px;color:#000;background-color:#f2f2f2;border-radius:10px;margin:-2px 0}.badge.get{color:#70bbe1;background-color:#d9edf7}.badge.head{color:#70bbe1;background-color:#d9edf7}.badge.options{color:#70bbe1;background-color:#d9edf7}.badge.put{color:#f0db70;background-color:#fcf8e3}.badge.patch{color:#f0db70;background-color:#fcf8e3}.badge.post{color:#93cd7c;background-color:#dff0d8}.badge.delete{color:#ce8383;background-color:#f2dede}.collapse-button{float:right}.collapse-button .close{display:none;color:#428bca;cursor:pointer}.collapse-button .open{color:#428bca;cursor:pointer}.collapse-button.show .close{display:inline}.collapse-button.show .open{display:none}.collapse-content{max-height:0;overflow:hidden;transition:max-height .3s ease-in-out}nav{width:220px}.container{max-width:940px;margin-left:auto;margin-right:auto}.container .row .content{margin-left:244px;width:696px}.container .row:after{content:&#39;&#39;;display:block;clear:both}.container-fluid nav{width:22%}.container-fluid .row .content{margin-left:24%}.container-fluid.triple nav{width:16.5%;padding-right:1px}.container-fluid.triple .row .content{position:relative;margin-left:16.5%;padding-left:24px}.middle:before,.middle:after{content:&#39;&#39;;display:table}.middle:after{clear:both}.middle{box-sizing:border-box;width:51.5%;padding-right:12px}.right{box-sizing:border-box;float:right;width:48.5%;padding-left:12px}.right a{color:#428bca}.right h1,.right h2,.right h3,.right h4,.right h5,.right p,.right div{color:white}.right pre{background-color:#1d1f21;border:1px solid #1d1f21}.right pre code{color:#c5c8c6}.right .description{margin-top:12px}.triple .resource-heading{font-size:125%}.definition{margin-top:12px;margin-bottom:12px}.definition .method{font-weight:bold}.definition .method.get{color:#2e8ab8}.definition .method.head{color:#2e8ab8}.definition .method.options{color:#2e8ab8}.definition .method.post{color:#56b82e}.definition .method.put{color:#b8a22e}.definition .method.patch{color:#b8a22e}.definition .method.delete{color:#b82e2e}.definition .uri{word-break:break-all;word-wrap:break-word}.definition .hostname{opacity:.5}.example-names{background-color:#eee;padding:12px;border-radius:6px}.example-names .tab-button{cursor:pointer;color:black;border:1px solid #ddd;padding:6px;margin-left:12px}.example-names .tab-button.active{background-color:#d5d5d5}.right .example-names{background-color:#444}.right .example-names .tab-button{color:white;border:1px solid #666;border-radius:6px}.right .example-names .tab-button.active{background-color:#5e5e5e}#nav-background{position:fixed;left:0;top:0;bottom:0;width:16.5%;padding-right:14.4px;background-color:#fbfbfb;border-right:1px solid #f0f0f0;z-index:-1}#right-panel-background{position:absolute;right:-12px;top:-12px;bottom:-12px;width:48.6%;background-color:#333;z-index:-1}@media (max-width:1200px){nav{width:198px}.container{max-width:840px}.container .row .content{margin-left:224px;width:606px}}@media (max-width:992px){nav{width:169.4px}.container{max-width:720px}.container .row .content{margin-left:194px;width:526px}}@media (max-width:768px){nav{display:none}.container{width:95%;max-width:none}.container .row .content,.container-fluid .row .content,.container-fluid.triple .row .content{margin-left:auto;margin-right:auto;width:95%}#nav-background{display:none}#right-panel-background{width:48.6%}}.back-to-top{position:fixed;z-index:1;bottom:0;right:24px;padding:4px 8px;color:rgba(0,0,0,0.5);background-color:#f2f2f2;text-decoration:none !important;border-top:1px solid #d9d9d9;border-left:1px solid #d9d9d9;border-right:1px solid #d9d9d9;border-top-left-radius:3px;border-top-right-radius:3px}.resource-group{padding:12px;margin-bottom:12px;background-color:white;border:1px solid #d9d9d9;border-radius:6px}.resource-group h2.group-heading,.resource-group .heading a{padding:12px;margin:-12px -12px 12px -12px;background-color:#f2f2f2;border-bottom:1px solid #d9d9d9;border-top-left-radius:6px;border-top-right-radius:6px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.triple .content .resource-group{padding:0;border:none}.triple .content .resource-group h2.group-heading,.triple .content .resource-group .heading a{margin:0 0 12px 0;border:1px solid #d9d9d9}nav .resource-group .heading a{padding:12px;margin-bottom:0}nav .resource-group .collapse-content{padding:0}.action{margin-bottom:12px;padding:12px 12px 0 12px;overflow:hidden;border:1px solid transparent;border-radius:6px}.action h4.action-heading{padding:6px 12px;margin:-12px -12px 12px -12px;border-bottom:1px solid transparent;border-top-left-radius:6px;border-top-right-radius:6px;overflow:hidden}.action h4.action-heading .name{float:right;font-weight:normal;padding:6px 0}.action h4.action-heading .method{padding:6px 12px;margin-right:12px;border-radius:3px;display:inline-block}.action h4.action-heading .method.get{color:#000;background-color:#337ab7}.action h4.action-heading .method.head{color:#000;background-color:#337ab7}.action h4.action-heading .method.options{color:#000;background-color:#337ab7}.action h4.action-heading .method.put{color:#000;background-color:#ed9c28}.action h4.action-heading .method.patch{color:#000;background-color:#ed9c28}.action h4.action-heading .method.post{color:#000;background-color:#5cb85c}.action h4.action-heading .method.delete{color:#000;background-color:#d9534f}.action h4.action-heading code{color:#444;background-color:#f5f5f5;border-color:#cfcfcf;font-weight:normal;word-break:break-all;display:inline-block;margin-top:2px}.action dl.inner{padding-bottom:2px}.action .title{border-bottom:1px solid white;margin:0 -12px -1px -12px;padding:12px}.action.get{border-color:#bce8f1}.action.get h4.action-heading{color:#337ab7;background:#d9edf7;border-bottom-color:#bce8f1}.action.head{border-color:#bce8f1}.action.head h4.action-heading{color:#337ab7;background:#d9edf7;border-bottom-color:#bce8f1}.action.options{border-color:#bce8f1}.action.options h4.action-heading{color:#337ab7;background:#d9edf7;border-bottom-color:#bce8f1}.action.post{border-color:#d6e9c6}.action.post h4.action-heading{color:#5cb85c;background:#dff0d8;border-bottom-color:#d6e9c6}.action.put{border-color:#faebcc}.action.put h4.action-heading{color:#ed9c28;background:#fcf8e3;border-bottom-color:#faebcc}.action.patch{border-color:#faebcc}.action.patch h4.action-heading{color:#ed9c28;background:#fcf8e3;border-bottom-color:#faebcc}.action.delete{border-color:#ebccd1}.action.delete h4.action-heading{color:#d9534f;background:#f2dede;border-bottom-color:#ebccd1}&lt;/style&gt;&lt;/head&gt;&lt;body class=&#34;preload&#34;&gt;&lt;a href=&#34;#top&#34; class=&#34;text-muted back-to-top&#34;&gt;&lt;i class=&#34;fa fa-toggle-up&#34;&gt;&lt;/i&gt;&amp;nbsp;Back to top&lt;/a&gt;&lt;div class=&#34;container-fluid&#34;&gt;&lt;div class=&#34;row&#34;&gt;&lt;nav&gt;&lt;div class=&#34;resource-group&#34;&gt;&lt;div class=&#34;heading&#34;&gt;&lt;div class=&#34;chevron&#34;&gt;&lt;i class=&#34;open fa fa-angle-down&#34;&gt;&lt;/i&gt;&lt;/div&gt;&lt;a href=&#34;#flows&#34;&gt;Flows&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;collapse-content&#34;&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;#flows-service-collection-get&#34;&gt;&lt;span class=&#34;badge get&#34;&gt;&lt;i class=&#34;fa fa-arrow-down&#34;&gt;&lt;/i&gt;&lt;/span&gt;Get SPAD information for this application&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;#flows-service-collection-get-1&#34;&gt;&lt;span class=&#34;badge get&#34;&gt;&lt;i class=&#34;fa fa-arrow-down&#34;&gt;&lt;/i&gt;&lt;/span&gt;Get SPAD information for this service&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/nav&gt;&lt;div class=&#34;content&#34;&gt;&lt;header&gt;&lt;h1 id=&#34;top&#34;&gt;SPAD&lt;/h1&gt;&lt;/header&gt;&lt;section id=&#34;flows&#34; class=&#34;resource-group&#34;&gt;&lt;h2 class=&#34;group-heading&#34;&gt;Flows &lt;a href=&#34;#flows&#34; class=&#34;permalink&#34;&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;&lt;div id=&#34;flows-service-collection&#34; class=&#34;resource&#34;&gt;&lt;h3 class=&#34;resource-heading&#34;&gt;Service Collection &lt;a href=&#34;#flows-service-collection&#34; class=&#34;permalink&#34;&gt;&amp;nbsp;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;div id=&#34;flows-service-collection-get&#34; class=&#34;action get&#34;&gt;&lt;h4 class=&#34;action-heading&#34;&gt;&lt;div class=&#34;name&#34;&gt;Get SPAD information for this application&lt;/div&gt;&lt;a href=&#34;#flows-service-collection-get&#34; class=&#34;method get&#34;&gt;GET&lt;/a&gt;&lt;code class=&#34;uri&#34;&gt;/.well-known/spad/v0/spad&lt;/code&gt;&lt;/h4&gt;&lt;h4&gt;Example URI&lt;/h4&gt;&lt;div class=&#34;definition&#34;&gt;&lt;span class=&#34;method get&#34;&gt;GET&lt;/span&gt;&amp;nbsp;&lt;span class=&#34;uri&#34;&gt;&lt;span class=&#34;hostname&#34;&gt;&lt;/span&gt;/.well-known/spad/v0/spad&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;title&#34;&gt;&lt;strong&gt;Response&amp;nbsp;&amp;nbsp;&lt;code&gt;200&lt;/code&gt;&lt;/strong&gt;&lt;div class=&#34;collapse-button&#34;&gt;&lt;span class=&#34;close&#34;&gt;Hide&lt;/span&gt;&lt;span class=&#34;open&#34;&gt;Show&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;collapse-content&#34;&gt;&lt;div class=&#34;inner&#34;&gt;&lt;h5&gt;Headers&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Content-Type&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;application/json&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&#34;height: 1px;&#34;&gt;&lt;/div&gt;&lt;h5&gt;Body&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;{
  &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;domain&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;example.com&#34;&lt;/span&gt;&lt;/span&gt;,
  &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;services&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;[
    {
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;name&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;message&#34;&lt;/span&gt;&lt;/span&gt;,
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;validTill&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;Fri 11 Nov 2016 22:20:08 UTC&#34;&lt;/span&gt;&lt;/span&gt;,
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;flows&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;[
        {
          &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;ips&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;[
            &lt;span class=&#34;hljs-string&#34;&gt;&#34;203.0.113.2&#34;&lt;/span&gt;,
            &lt;span class=&#34;hljs-string&#34;&gt;&#34;2001:db8::1&#34;&lt;/span&gt;
          ]&lt;/span&gt;,
          &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;port&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-number&#34;&gt;443&lt;/span&gt;&lt;/span&gt;,
          &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;name&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;example.com&#34;&lt;/span&gt;&lt;/span&gt;,
          &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;protocol&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;udp&#34;&lt;/span&gt;&lt;/span&gt;,
          &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;qos&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;CS1&#34;&lt;/span&gt;
        &lt;/span&gt;}
      ]
    &lt;/span&gt;}
  ]
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;div style=&#34;height: 1px;&#34;&gt;&lt;/div&gt;&lt;h5&gt;Schema&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;{
  &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;$schema&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;http://json-schema.org/draft-04/schema#&#34;&lt;/span&gt;&lt;/span&gt;,
  &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;type&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;object&#34;&lt;/span&gt;&lt;/span&gt;,
  &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;properties&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;{
    &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;domain&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;{
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;type&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;string&#34;&lt;/span&gt;
    &lt;/span&gt;}&lt;/span&gt;,
    &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;services&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;{
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;type&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;array&#34;&lt;/span&gt;
    &lt;/span&gt;}
  &lt;/span&gt;}
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;div style=&#34;height: 1px;&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;flows-service-collection-1&#34; class=&#34;resource&#34;&gt;&lt;h3 class=&#34;resource-heading&#34;&gt;Service Collection &lt;a href=&#34;#flows-service-collection-1&#34; class=&#34;permalink&#34;&gt;&amp;nbsp;&amp;para;&lt;/a&gt;&lt;/h3&gt;&lt;div id=&#34;flows-service-collection-get-1&#34; class=&#34;action get&#34;&gt;&lt;h4 class=&#34;action-heading&#34;&gt;&lt;div class=&#34;name&#34;&gt;Get SPAD information for this service&lt;/div&gt;&lt;a href=&#34;#flows-service-collection-get-1&#34; class=&#34;method get&#34;&gt;GET&lt;/a&gt;&lt;code class=&#34;uri&#34;&gt;/.well-known/spad/v0/{service}&lt;/code&gt;&lt;/h4&gt;&lt;h4&gt;Example URI&lt;/h4&gt;&lt;div class=&#34;definition&#34;&gt;&lt;span class=&#34;method get&#34;&gt;GET&lt;/span&gt;&amp;nbsp;&lt;span class=&#34;uri&#34;&gt;&lt;span class=&#34;hostname&#34;&gt;&lt;/span&gt;/.well-known/spad/v0/&lt;span class=&#34;hljs-attribute&#34; title=&#34;service&#34;&gt;service&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;title&#34;&gt;&lt;strong&gt;URI Parameters&lt;/strong&gt;&lt;div class=&#34;collapse-button show&#34;&gt;&lt;span class=&#34;close&#34;&gt;Hide&lt;/span&gt;&lt;span class=&#34;open&#34;&gt;Show&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;collapse-content&#34;&gt;&lt;dl class=&#34;inner&#34;&gt;&lt;dt&gt;service&lt;/dt&gt;&lt;dd&gt;&lt;code&gt;string&lt;/code&gt;&amp;nbsp;&lt;span class=&#34;required&#34;&gt;(required)&lt;/span&gt;&amp;nbsp;&lt;ul&gt;
&lt;li&gt;service name to lookup&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;&lt;/dl&gt;&lt;/div&gt;&lt;div class=&#34;title&#34;&gt;&lt;strong&gt;Response&amp;nbsp;&amp;nbsp;&lt;code&gt;200&lt;/code&gt;&lt;/strong&gt;&lt;div class=&#34;collapse-button&#34;&gt;&lt;span class=&#34;close&#34;&gt;Hide&lt;/span&gt;&lt;span class=&#34;open&#34;&gt;Show&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;collapse-content&#34;&gt;&lt;div class=&#34;inner&#34;&gt;&lt;h5&gt;Headers&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Content-Type&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;application/json&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&#34;height: 1px;&#34;&gt;&lt;/div&gt;&lt;h5&gt;Body&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;{
  &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;name&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;message&#34;&lt;/span&gt;&lt;/span&gt;,
  &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;validTill&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;Fri 11 Nov 2016 22:20:08 UTC&#34;&lt;/span&gt;&lt;/span&gt;,
  &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;flows&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;[
    {
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;ips&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;[
        &lt;span class=&#34;hljs-string&#34;&gt;&#34;203.0.113.2&#34;&lt;/span&gt;,
        &lt;span class=&#34;hljs-string&#34;&gt;&#34;2001:db8::1&#34;&lt;/span&gt;
      ]&lt;/span&gt;,
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;port&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-number&#34;&gt;443&lt;/span&gt;&lt;/span&gt;,
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;name&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;example.com&#34;&lt;/span&gt;&lt;/span&gt;,
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;protocol&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;udp&#34;&lt;/span&gt;&lt;/span&gt;,
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;qos&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;CS1&#34;&lt;/span&gt;
    &lt;/span&gt;}
  ]
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;div style=&#34;height: 1px;&#34;&gt;&lt;/div&gt;&lt;h5&gt;Schema&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;{
  &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;$schema&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;http://json-schema.org/draft-04/schema#&#34;&lt;/span&gt;&lt;/span&gt;,
  &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;type&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;object&#34;&lt;/span&gt;&lt;/span&gt;,
  &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;properties&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;{
    &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;name&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;{
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;type&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;string&#34;&lt;/span&gt;
    &lt;/span&gt;}&lt;/span&gt;,
    &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;validTill&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;{
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;type&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;string&#34;&lt;/span&gt;
    &lt;/span&gt;}&lt;/span&gt;,
    &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;flows&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;{
      &#34;&lt;span class=&#34;hljs-attribute&#34;&gt;type&lt;/span&gt;&#34;: &lt;span class=&#34;hljs-value&#34;&gt;&lt;span class=&#34;hljs-string&#34;&gt;&#34;array&#34;&lt;/span&gt;
    &lt;/span&gt;}
  &lt;/span&gt;}
&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;div style=&#34;height: 1px;&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p style=&#34;text-align: center;&#34; class=&#34;text-muted&#34;&gt;Generated by&amp;nbsp;&lt;a href=&#34;https://github.com/danielgtaylor/aglio&#34; class=&#34;aglio&#34;&gt;aglio&lt;/a&gt;&amp;nbsp;on 12 Nov 2016&lt;/p&gt;&lt;script&gt;/* eslint-env browser */
/* eslint quotes: [2, &#34;single&#34;] */
&#39;use strict&#39;;

/*
  Determine if a string ends with another string.
*/
function endsWith(str, suffix) {
    return str.indexOf(suffix, str.length - suffix.length) !== -1;
}

/*
  Get a list of direct child elements by class name.
*/
function childrenByClass(element, name) {
  var filtered = [];

  for (var i = 0; i &lt; element.children.length; i++) {
    var child = element.children[i];
    var classNames = child.className.split(&#39; &#39;);
    if (classNames.indexOf(name) !== -1) {
      filtered.push(child);
    }
  }

  return filtered;
}

/*
  Get an array [width, height] of the window.
*/
function getWindowDimensions() {
  var w = window,
      d = document,
      e = d.documentElement,
      g = d.body,
      x = w.innerWidth || e.clientWidth || g.clientWidth,
      y = w.innerHeight || e.clientHeight || g.clientHeight;

  return [x, y];
}

/*
  Collapse or show a request/response example.
*/
function toggleCollapseButton(event) {
    var button = event.target.parentNode;
    var content = button.parentNode.nextSibling;
    var inner = content.children[0];

    if (button.className.indexOf(&#39;collapse-button&#39;) === -1) {
      // Clicked without hitting the right element?
      return;
    }

    if (content.style.maxHeight &amp;&amp; content.style.maxHeight !== &#39;0px&#39;) {
        // Currently showing, so let&#39;s hide it
        button.className = &#39;collapse-button&#39;;
        content.style.maxHeight = &#39;0px&#39;;
    } else {
        // Currently hidden, so let&#39;s show it
        button.className = &#39;collapse-button show&#39;;
        content.style.maxHeight = inner.offsetHeight + 12 + &#39;px&#39;;
    }
}

function toggleTabButton(event) {
    var i, index;
    var button = event.target;

    // Get index of the current button.
    var buttons = childrenByClass(button.parentNode, &#39;tab-button&#39;);
    for (i = 0; i &lt; buttons.length; i++) {
        if (buttons[i] === button) {
            index = i;
            button.className = &#39;tab-button active&#39;;
        } else {
            buttons[i].className = &#39;tab-button&#39;;
        }
    }

    // Hide other tabs and show this one.
    var tabs = childrenByClass(button.parentNode.parentNode, &#39;tab&#39;);
    for (i = 0; i &lt; tabs.length; i++) {
        if (i === index) {
            tabs[i].style.display = &#39;block&#39;;
        } else {
            tabs[i].style.display = &#39;none&#39;;
        }
    }
}

/*
  Collapse or show a navigation menu. It will not be hidden unless it
  is currently selected or `force` has been passed.
*/
function toggleCollapseNav(event, force) {
    var heading = event.target.parentNode;
    var content = heading.nextSibling;
    var inner = content.children[0];

    if (heading.className.indexOf(&#39;heading&#39;) === -1) {
      // Clicked without hitting the right element?
      return;
    }

    if (content.style.maxHeight &amp;&amp; content.style.maxHeight !== &#39;0px&#39;) {
      // Currently showing, so let&#39;s hide it, but only if this nav item
      // is already selected. This prevents newly selected items from
      // collapsing in an annoying fashion.
      if (force || window.location.hash &amp;&amp; endsWith(event.target.href, window.location.hash)) {
        content.style.maxHeight = &#39;0px&#39;;
      }
    } else {
      // Currently hidden, so let&#39;s show it
      content.style.maxHeight = inner.offsetHeight + 12 + &#39;px&#39;;
    }
}

/*
  Refresh the page after a live update from the server. This only
  works in live preview mode (using the `--server` parameter).
*/
function refresh(body) {
    document.querySelector(&#39;body&#39;).className = &#39;preload&#39;;
    document.body.innerHTML = body;

    // Re-initialize the page
    init();
    autoCollapse();

    document.querySelector(&#39;body&#39;).className = &#39;&#39;;
}

/*
  Determine which navigation items should be auto-collapsed to show as many
  as possible on the screen, based on the current window height. This also
  collapses them.
*/
function autoCollapse() {
  var windowHeight = getWindowDimensions()[1];
  var itemsHeight = 64; /* Account for some padding */
  var itemsArray = Array.prototype.slice.call(
    document.querySelectorAll(&#39;nav .resource-group .heading&#39;));

  // Get the total height of the navigation items
  itemsArray.forEach(function (item) {
    itemsHeight += item.parentNode.offsetHeight;
  });

  // Should we auto-collapse any nav items? Try to find the smallest item
  // that can be collapsed to show all items on the screen. If not possible,
  // then collapse the largest item and do it again. First, sort the items
  // by height from smallest to largest.
  var sortedItems = itemsArray.sort(function (a, b) {
    return a.parentNode.offsetHeight - b.parentNode.offsetHeight;
  });

  while (sortedItems.length &amp;&amp; itemsHeight &gt; windowHeight) {
    for (var i = 0; i &lt; sortedItems.length; i++) {
      // Will collapsing this item help?
      var itemHeight = sortedItems[i].nextSibling.offsetHeight;
      if ((itemsHeight - itemHeight &lt;= windowHeight) || i === sortedItems.length - 1) {
        // It will, so let&#39;s collapse it, remove its content height from
        // our total and then remove it from our list of candidates
        // that can be collapsed.
        itemsHeight -= itemHeight;
        toggleCollapseNav({target: sortedItems[i].children[0]}, true);
        sortedItems.splice(i, 1);
        break;
      }
    }
  }
}

/*
  Initialize the interactive functionality of the page.
*/
function init() {
    var i, j;

    // Make collapse buttons clickable
    var buttons = document.querySelectorAll(&#39;.collapse-button&#39;);
    for (i = 0; i &lt; buttons.length; i++) {
        buttons[i].onclick = toggleCollapseButton;

        // Show by default? Then toggle now.
        if (buttons[i].className.indexOf(&#39;show&#39;) !== -1) {
            toggleCollapseButton({target: buttons[i].children[0]});
        }
    }

    var responseCodes = document.querySelectorAll(&#39;.example-names&#39;);
    for (i = 0; i &lt; responseCodes.length; i++) {
        var tabButtons = childrenByClass(responseCodes[i], &#39;tab-button&#39;);
        for (j = 0; j &lt; tabButtons.length; j++) {
            tabButtons[j].onclick = toggleTabButton;

            // Show by default?
            if (j === 0) {
                toggleTabButton({target: tabButtons[j]});
            }
        }
    }

    // Make nav items clickable to collapse/expand their content.
    var navItems = document.querySelectorAll(&#39;nav .resource-group .heading&#39;);
    for (i = 0; i &lt; navItems.length; i++) {
        navItems[i].onclick = toggleCollapseNav;

        // Show all by default
        toggleCollapseNav({target: navItems[i].children[0]});
    }
}

// Initial call to set up buttons
init();

window.onload = function () {
    autoCollapse();
    // Remove the `preload` class to enable animations
    document.querySelector(&#39;body&#39;).className = &#39;&#39;;
};
&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</description>
    </item>
    
    <item>
      <title>About SPAD</title>
      <link>https://fluffy.github.io/spad/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fluffy.github.io/spad/about/</guid>
      <description>&lt;p&gt;TODO - More to be said &amp;quot;about&amp;quot; this site.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blueprint Spec for API</title>
      <link>https://fluffy.github.io/spad/blueprint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fluffy.github.io/spad/blueprint/</guid>
      <description>&lt;p&gt;The Bluprint specification for the API is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;FORMAT: 1A

# SPAD

# Group Flows

## Service Collection [/.well-known/spad/v0/spad]
### Get SPAD information for this application [GET]
+ Response 200 (application/json)
  + Attributes ( Application )

## Service Collection [/.well-known/spad/v0/{service}]
### Get SPAD information for this service [GET]
+ Parameters
    + service (string) -- service name to lookup
+ Response 200 (application/json)
  + Attributes ( Service )
  

# Data Structures

## Application
+ domain: example.com (string)
+ services (array[Service])

## Service (object)
+ name: message (string) 
+ validTill: Fri 11 Nov 2016 22:20:08 UTC (string)
+ flows (array[Flow])

## Flow (object)
+ ips: 203.0.113.2, 2001:db8::1 (array[string], required) - All IP addresses used by this flow
+ port: 443 (number, required) - destination port number 
+ name: example.com (string, optional) - names used in TLS SNI or Proxy connect  
+ protocol: udp, tcp, http, tls, https, quic (enum, optional)
+ qos: CS1, DF, EF, AF11, AF21, AF41, AF42, AF43, AF31, AF32, AF33 (enum, optional)

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Contributing</title>
      <link>https://fluffy.github.io/spad/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fluffy.github.io/spad/contributing/</guid>
      <description>&lt;h1 id=&#34;development-of-this-specification&#34;&gt;Development of this Specification&lt;/h1&gt;

&lt;h2 id=&#34;specification-style&#34;&gt;Specification Style&lt;/h2&gt;

&lt;p&gt;The specification style is &amp;quot;less is more.&amp;quot; If a reasonable developer
who is fully up on modern web development practices could figure out
how write an interoperable implementation after looking at some
examples and code and asking a few questions, well that&#39;s good enough
for us. If you can find it on Wikipedia, we don&#39;t need to explain it
here.&lt;/p&gt;

&lt;p&gt;The build chain allows for an internet draft to be produced from separate parts: a basic draft skeleton that includes narrative text; examples; an API specification; and a schema. Markdown is used for text. RAML and JSON Schema are used to describe
the API. Examples play a central role in the specification. The build
chain has the goal of being simple and obvious with no black magic.&lt;/p&gt;

&lt;h2 id=&#34;following-discussion&#34;&gt;Following Discussion&lt;/h2&gt;

&lt;p&gt;We welcome all contributions. Discussion takes place in a few places:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We discuss specific issues on the appropriate issues list in &lt;a href=&#34;https://github.com/fluffy/spad/issues&#34;&gt;Github&lt;/a&gt;. If you don&#39;t want to use Github to follow these discussions, you can subscribe to the &lt;a href=&#34;https://www.ietf.org/mailman/listinfo/spad-issues&#34;&gt;issue announce list&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Our &lt;a href=&#34;https://www.ietf.org/mailman/listinfo/spad&#34;&gt;mailing list&lt;/a&gt; is used for confirmation of consensus.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;resolving-issues&#34;&gt;Resolving Issues&lt;/h2&gt;

&lt;p&gt;Consensus for the resolution of an issue can be established through discussion on the issues list. Once a resolution is found, the issue will be labeled as &lt;code&gt;editor-ready&lt;/code&gt;. The editor will then write a pull request suggesting the specific changes to make to resolve the issue. Consensus to adopt the change will be judged on the mailing list. Once a pull request has consensus, the editor will merge it and close the issue.&lt;/p&gt;

&lt;h2 id=&#34;pull-requests&#34;&gt;Pull Requests&lt;/h2&gt;

&lt;p&gt;We welcome pull requests, both for editorial suggestions and to resolve open issues. In the latter case, please identify the relevant issue.&lt;/p&gt;

&lt;p&gt;Please do not use a pull request to open a new design issue; it may not be noticed.&lt;/p&gt;

&lt;h2 id=&#34;published-versions&#34;&gt;Published Versions&lt;/h2&gt;

&lt;p&gt;The web site at (&lt;a href=&#34;https://coopdanger.github.io/spad/&#34;&gt;https://coopdanger.github.io/spad/&lt;/a&gt;) provides an overview of the specification that is focused on a developer audience. However, all
the key information to implement the specification that is used to
generate the web site is also used to generate and internet draft that
can be found at &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-jennings-dispatch-spad-v0-00/&#34;&gt;draft-jennings-dispatch-spad-v0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Periodically the information on the master is branched to a versioned draft branch and the content of that branch is used to produce an updated version of the internet draft. A typical cadence for this is monthly
so that the draft can receive broader review.&lt;/p&gt;

&lt;p&gt;When the work is at a good
point to form a stable version of the API, it is progressed through the IETF publication process with the goal of publishing an RFC. Once approved, the
text of the RFC is used to form a released version of the API. The first version would be v1. The current working pre-standard
version is always referred to as v0.  The API includes the version in
the URL so that developers can implement to a specific non-changing
specification. Future versions attempt, but do not guarantee, to be
backwards-compatible with the previous version.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://fluffy.github.io/spad/getting_started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fluffy.github.io/spad/getting_started/</guid>
      <description>&lt;p&gt;To figure out what IP addresses are used by the service example.com,
the first step is to form the query URL by constructing an endpoint at
&amp;quot;.well-known/spad/v0/spad&amp;quot;.&lt;/p&gt;

&lt;p&gt;Then an HTTPS GET query is done that to that URL.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl https://example.com/.well-known/spad/v0/spad
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The responses would be a JSON result that could looks like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;domain&amp;quot;: &amp;quot;example.com&amp;quot;,
  &amp;quot;services&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;example-service&amp;quot;,
      &amp;quot;validTill&amp;quot;: &amp;quot;Fri 11 Nov 2016 22:20:08 UTC&amp;quot;,
      &amp;quot;flows&amp;quot;: [
        {
          &amp;quot;ips&amp;quot;: [
            &amp;quot;203.0.113.2&amp;quot;
          ],
          &amp;quot;port&amp;quot;: 443,
          &amp;quot;protocol&amp;quot;: &amp;quot;https&amp;quot;
        }
      ]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The example above  indicates that the &amp;quot;example.com&amp;quot; application has a
single service with a single flow that uses only the HTTPS to connect to
port 443 on the IP address &amp;quot;203.0.113.2&amp;quot;.  This SPAD information is
not valid after &amp;quot;Fri 11 Nov 2016 22:20:08 UTC&amp;quot; and a new SPAD file
should be retrieved before that point in time.&lt;/p&gt;

&lt;p&gt;The following shows a more complex example result for an application
that uses two flows. One is TLS to the SIP port of a server with an v4
and v6 address. The TLS connection will have a name of example.com in
the SNI.  The other flow is media sent over UDP to port 5004 on a few
different ip addresses. If devices in the network are capable of
remarking DSCP, the desired marking is &amp;quot;AF41&amp;quot;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;domain&amp;quot;: &amp;quot;example.com&amp;quot;,
  &amp;quot;services&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;voice-example&amp;quot;,
      &amp;quot;validTill&amp;quot;: &amp;quot;Fri 11 Nov 2016 22:20:08 UTC&amp;quot;,
      &amp;quot;flows&amp;quot;: [
        {
          &amp;quot;ips&amp;quot;: [
            &amp;quot;203.0.113.2&amp;quot;,
            &amp;quot;2001:db8::1&amp;quot;
          ],
          &amp;quot;port&amp;quot;: 5061,
          &amp;quot;name&amp;quot;: &amp;quot;example.com&amp;quot;,
          &amp;quot;protocol&amp;quot;: &amp;quot;tls&amp;quot;
        },
        {
          &amp;quot;ips&amp;quot;: [
            &amp;quot;192.0.2.1&amp;quot;,
            &amp;quot;2001:db8::2&amp;quot;
          ],
          &amp;quot;port&amp;quot;: 5004,
          &amp;quot;protocol&amp;quot;: &amp;quot;udp&amp;quot;,
          &amp;quot;qos&amp;quot;: &amp;quot;AF41&amp;quot;
        }
      ]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Internet Draft</title>
      <link>https://fluffy.github.io/spad/draft-jennings-dispatch-spad-v0-latest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fluffy.github.io/spad/draft-jennings-dispatch-spad-v0-latest/</guid>
      <description>&lt;h1 class=&#34;abstract&#34; id=&#34;abstract&#34;&gt;Abstract&lt;/h1&gt;

&lt;p&gt;This specification defines a simple JSON format and well known URL for
firewalls and other devices to discover whats IP addresses, ports, and
related transports a given cloud services uses.&lt;/p&gt;

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Simple Port and Address Discovery (SPAD) allows an web application to
inform others of what ports and IP addresses it uses so that things
like firewalls can correctly re-configure themsleves as the ports and
addresses change. Applications are identified by a domain name which
is used to form a URL in a well known location where a client can do a
HTTP REST call to get a JSON file that describes information about
what addresses and transport the service uses.&lt;/p&gt;

&lt;h1 id=&#34;terminology&#34;&gt;Terminology&lt;/h1&gt;

&lt;p&gt;In this document, the key words &amp;quot;MUST&amp;quot;, &amp;quot;MUST NOT&amp;quot;, &amp;quot;SHOULD&amp;quot;, &amp;quot;SHOULD
NOT&amp;quot;, &amp;quot;MAY&amp;quot;, and &amp;quot;OPTIONAL&amp;quot; are to be interpreted as described in RFC
2119 &lt;a class=&#34;cite&#34; href=&#34;#rfc2119&#34;&gt;&lt;/a&gt; and indicate requirement levels for compliant
implementations.&lt;/p&gt;

&lt;p&gt;RAML is defined at &lt;a href=&#34;https://github.com/raml-org&#34;&gt;https://github.com/raml-org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;JSON Schema is defined at &lt;a href=&#34;http://json-schema.org/&#34;&gt;http://json-schema.org/&lt;/a&gt;. Further
information is available in &lt;a class=&#34;cite&#34; href=&#34;#i-d.wright-json-schema&#34;&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;example&#34;&gt;Example&lt;/h1&gt;

&lt;p&gt;To figure out what IP addresses are used by the service example.com,
the first step is to form the query URL by constructing an endpoint at
&amp;quot;.well-known/spad/v0/spad&amp;quot;.&lt;/p&gt;

&lt;p&gt;Then an HTTPS GET query is done that to that URL.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl https://example.com/.well-known/spad/v0/spad
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The responses would be a JSON result that could looks like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;domain&amp;quot;: &amp;quot;example.com&amp;quot;,
  &amp;quot;services&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;example-service&amp;quot;,
      &amp;quot;validTill&amp;quot;: &amp;quot;Fri 11 Nov 2016 22:20:08 UTC&amp;quot;,
      &amp;quot;flows&amp;quot;: [
        {
          &amp;quot;ips&amp;quot;: [
            &amp;quot;203.0.113.2&amp;quot;
          ],
          &amp;quot;port&amp;quot;: 443,
          &amp;quot;protocol&amp;quot;: &amp;quot;https&amp;quot;
        }
      ]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The example above  indicates that the &amp;quot;example.com&amp;quot; application has a
single service with a single flow that uses only the HTTPS to connect to
port 443 on the IP address &amp;quot;203.0.113.2&amp;quot;.  This SPAD information is
not valid after &amp;quot;Fri 11 Nov 2016 22:20:08 UTC&amp;quot; and a new SPAD file
should be retrieved before that point in time.&lt;/p&gt;

&lt;p&gt;The following shows a more complex example result for an application
that uses two flows. One is TLS to the SIP port of a server with an v4
and v6 address. The TLS connection will have a name of example.com in
the SNI.  The other flow is media sent over UDP to port 5004 on a few
different ip addresses. If devices in the network are capable of
remarking DSCP, the desired marking is &amp;quot;AF41&amp;quot;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;domain&amp;quot;: &amp;quot;example.com&amp;quot;,
  &amp;quot;services&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;voice-example&amp;quot;,
      &amp;quot;validTill&amp;quot;: &amp;quot;Fri 11 Nov 2016 22:20:08 UTC&amp;quot;,
      &amp;quot;flows&amp;quot;: [
        {
          &amp;quot;ips&amp;quot;: [
            &amp;quot;203.0.113.2&amp;quot;,
            &amp;quot;2001:db8::1&amp;quot;
          ],
          &amp;quot;port&amp;quot;: 5061,
          &amp;quot;name&amp;quot;: &amp;quot;example.com&amp;quot;,
          &amp;quot;protocol&amp;quot;: &amp;quot;tls&amp;quot;
        },
        {
          &amp;quot;ips&amp;quot;: [
            &amp;quot;192.0.2.1&amp;quot;,
            &amp;quot;2001:db8::2&amp;quot;
          ],
          &amp;quot;port&amp;quot;: 5004,
          &amp;quot;protocol&amp;quot;: &amp;quot;udp&amp;quot;,
          &amp;quot;qos&amp;quot;: &amp;quot;AF41&amp;quot;
        }
      ]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;protocols&#34;&gt;Protocols&lt;/h1&gt;

&lt;p&gt;The protocol field is filled out with the most specific instance of a
well defined protocol that is running. Any protocols that are implied
as the normal default by this that it runs over are omitted. For
example, HTTPS runs over TLS over TCP over IP. In this case the only
thing listed is HTTPS. However if HTTPS was being used over SCTP which
is not the normal thing, and the SCTP was over UDP which is also not
the default, then it would be listed at HTTPS/SCTP/UDP but IP is not
added as that is the normal thing for UDP to be over.&lt;/p&gt;

&lt;p&gt;URI scheme from
&lt;a href=&#34;https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml&#34;&gt;https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml&lt;/a&gt;. is
preferred thing to use if defined, followed by the service name from
&lt;a href=&#34;https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml&#34;&gt;https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml&lt;/a&gt;
followed by the protocol by the Transport Protocol from RFC 6335. All
names are moved to all lower case for consistency.&lt;/p&gt;

&lt;h1 id=&#34;blueprint&#34;&gt;Blueprint&lt;/h1&gt;

&lt;p&gt;The Bluprint specification for the API is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;FORMAT: 1A

# SPAD

# Group Flows

## Service Collection [/.well-known/spad/v0/spad]
### Get SPAD information for this application [GET]
+ Response 200 (application/json)
  + Attributes ( Application )

## Service Collection [/.well-known/spad/v0/{service}]
### Get SPAD information for this service [GET]
+ Parameters
    + service (string) -- service name to lookup
+ Response 200 (application/json)
  + Attributes ( Service )
  

# Data Structures

## Application
+ domain: example.com (string)
+ services (array[Service])

## Service (object)
+ name: message (string) 
+ validTill: Fri 11 Nov 2016 22:20:08 UTC (string)
+ flows (array[Flow])

## Flow (object)
+ ips: 203.0.113.2, 2001:db8::1 (array[string], required) - All IP addresses used by this flow
+ port: 443 (number, required) - destination port number 
+ name: example.com (string, optional) - names used in TLS SNI or Proxy connect  
+ protocol: udp, tcp, http, tls, https, quic (enum, optional)
+ qos: CS1, DF, EF, AF11, AF21, AF41, AF42, AF43, AF31, AF32, AF33 (enum, optional)

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;schemas&#34;&gt;Schemas&lt;/h1&gt;

&lt;p&gt;The JSON returned from MUST corespond to the following JSON schema.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;$schema&amp;quot;: &amp;quot;http://json-schema.org/draft-04/schema#&amp;quot;,
  &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
  &amp;quot;title&amp;quot;: &amp;quot;SPAD schema.&amp;quot;,
  &amp;quot;properties&amp;quot;: {

      &amp;quot;domain&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
          &amp;quot;title&amp;quot;: &amp;quot;TODO&amp;quot;
      },

      &amp;quot;services&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;array&amp;quot;,
          
          &amp;quot;items&amp;quot;: {
              &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
              &amp;quot;properties&amp;quot;: {
                  
                  &amp;quot;name&amp;quot;: {
                      &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
                      &amp;quot;title&amp;quot;: &amp;quot;name of service&amp;quot;
                  },
                  
                  &amp;quot;validTill&amp;quot;: {
                      &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
                      &amp;quot;title&amp;quot;: &amp;quot;Expiry time for this SPAD file&amp;quot;
                  },
                  
                  &amp;quot;flows&amp;quot;: {
                      &amp;quot;type&amp;quot;: &amp;quot;array&amp;quot;,
                      &amp;quot;uniqueItems&amp;quot;: false,
                      &amp;quot;title&amp;quot;: &amp;quot;Transport List&amp;quot;,
                      &amp;quot;description&amp;quot;: &amp;quot;List of transports used by the application.&amp;quot;,
                      &amp;quot;items&amp;quot;: {
                          &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
                          &amp;quot;title&amp;quot;: &amp;quot;Flow&amp;quot;,
                          &amp;quot;properties&amp;quot;: {
                              &amp;quot;ips&amp;quot;: {
                                  &amp;quot;type&amp;quot;: &amp;quot;array&amp;quot;,
                                  &amp;quot;uniqueItems&amp;quot;: false,
                                  &amp;quot;title&amp;quot;: &amp;quot;IP addresses list&amp;quot;,
                                  &amp;quot;items&amp;quot;: {
                                      &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
                                      &amp;quot;title&amp;quot;: &amp;quot;IPv4 or v6 address&amp;quot;
                                  }
                              },
                              &amp;quot;port&amp;quot;: {
                                  
                                  &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;,
                                  &amp;quot;maximum&amp;quot;: 65535,
                                  &amp;quot;minimum&amp;quot;: 1,
                                  &amp;quot;title&amp;quot;: &amp;quot;port&amp;quot;,
                                  &amp;quot;description&amp;quot;: &amp;quot;Destination ports used by the transport protocol.&amp;quot;
                                  
                              },
                              &amp;quot;name&amp;quot;: {
                                  &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
                                  &amp;quot;title&amp;quot;: &amp;quot;DNS name&amp;quot;,
                                  &amp;quot;description&amp;quot;: &amp;quot;DNS name that will be used to connect to.&amp;quot;
                                  
                              },
                              &amp;quot;qos&amp;quot;:  {
                                  &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
                                  &amp;quot;title&amp;quot;: &amp;quot;DSCP&amp;quot;,
                                  &amp;quot;description&amp;quot;: &amp;quot;Differentiated Services Code Point to use.&amp;quot;,
                                  &amp;quot;enum&amp;quot;: [
                                      &amp;quot;CS1&amp;quot;,
                                      &amp;quot;DF&amp;quot;,
                                      &amp;quot;EF&amp;quot;,
                                      &amp;quot;AF11&amp;quot;,
                                      &amp;quot;AF21&amp;quot;,
                                      &amp;quot;AF41&amp;quot;,
                                      &amp;quot;AF42&amp;quot;,
                                      &amp;quot;AF43&amp;quot;,
                                      &amp;quot;AF31&amp;quot;,
                                      &amp;quot;AF32&amp;quot;,
                                      &amp;quot;AF33&amp;quot;
                                  ]
                              },
                              &amp;quot;protocols&amp;quot;: {
                                  &amp;quot;title&amp;quot;: &amp;quot;Transport Protocol List&amp;quot;,
                                  &amp;quot;description&amp;quot;: &amp;quot;Protocols used.&amp;quot;,
                                  &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
                                  &amp;quot;title&amp;quot;: &amp;quot;protocol&amp;quot;,
                                  &amp;quot;enum&amp;quot;: [
                                      &amp;quot;udp&amp;quot;,
                                      &amp;quot;tcp&amp;quot;,
                                      &amp;quot;http&amp;quot;,
                                      &amp;quot;tls&amp;quot;,
                                      &amp;quot;https&amp;quot;,
                                      &amp;quot;quic&amp;quot;
                                  ]
                              }
                          }
                      }
                  }
              }
          }
      }
  },
  &amp;quot;required&amp;quot;: [
    &amp;quot;domain&amp;quot;,
    &amp;quot;services&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;iana-consideration&#34;&gt;IANA Consideration&lt;/h1&gt;

&lt;p&gt;TODO - register well known URL usage&lt;/p&gt;

&lt;h1 id=&#34;security-considerations&#34;&gt;Security Considerations&lt;/h1&gt;

&lt;p&gt;TODO - explain importance of HTTPS&lt;/p&gt;

&lt;p&gt;Discuss merging with existing ACL&lt;/p&gt;

&lt;h1 id=&#34;acknowledgements&#34;&gt;Acknowledgements&lt;/h1&gt;

&lt;p&gt;Thank you for the contributions from:
Cullen Jennings&lt;/p&gt;

&lt;h1 id=&#34;development-of-this-specification&#34; class=&#34;appendix&#34;&gt;Development of this Specification&lt;/h1&gt;

&lt;h2 id=&#34;specification-style&#34; class=&#34;appendix&#34;&gt;Specification Style&lt;/h2&gt;

&lt;p&gt;The specification style is &amp;quot;less is more.&amp;quot; If a reasonable developer
who is fully up on modern web development practices could figure out
how write an interoperable implementation after looking at some
examples and code and asking a few questions, well that&#39;s good enough
for us. If you can find it on Wikipedia, we don&#39;t need to explain it
here.&lt;/p&gt;

&lt;p&gt;The build chain allows for an internet draft to be produced from separate parts: a basic draft skeleton that includes narrative text; examples; an API specification; and a schema. Markdown is used for text. RAML and JSON Schema are used to describe
the API. Examples play a central role in the specification. The build
chain has the goal of being simple and obvious with no black magic.&lt;/p&gt;

&lt;h2 id=&#34;following-discussion&#34; class=&#34;appendix&#34;&gt;Following Discussion&lt;/h2&gt;

&lt;p&gt;We welcome all contributions. Discussion takes place in a few places:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We discuss specific issues on the appropriate issues list in &lt;a href=&#34;https://github.com/fluffy/spad/issues&#34;&gt;Github&lt;/a&gt;. If you don&#39;t want to use Github to follow these discussions, you can subscribe to the &lt;a href=&#34;https://www.ietf.org/mailman/listinfo/spad-issues&#34;&gt;issue announce list&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Our &lt;a href=&#34;https://www.ietf.org/mailman/listinfo/spad&#34;&gt;mailing list&lt;/a&gt; is used for confirmation of consensus.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;resolving-issues&#34; class=&#34;appendix&#34;&gt;Resolving Issues&lt;/h2&gt;

&lt;p&gt;Consensus for the resolution of an issue can be established through discussion on the issues list. Once a resolution is found, the issue will be labeled as &lt;code&gt;editor-ready&lt;/code&gt;. The editor will then write a pull request suggesting the specific changes to make to resolve the issue. Consensus to adopt the change will be judged on the mailing list. Once a pull request has consensus, the editor will merge it and close the issue.&lt;/p&gt;

&lt;h2 id=&#34;pull-requests&#34; class=&#34;appendix&#34;&gt;Pull Requests&lt;/h2&gt;

&lt;p&gt;We welcome pull requests, both for editorial suggestions and to resolve open issues. In the latter case, please identify the relevant issue.&lt;/p&gt;

&lt;p&gt;Please do not use a pull request to open a new design issue; it may not be noticed.&lt;/p&gt;

&lt;h2 id=&#34;published-versions&#34; class=&#34;appendix&#34;&gt;Published Versions&lt;/h2&gt;

&lt;p&gt;The web site at (&lt;a href=&#34;https://coopdanger.github.io/spad/&#34;&gt;https://coopdanger.github.io/spad/&lt;/a&gt;) provides an overview of the specification that is focused on a developer audience. However, all
the key information to implement the specification that is used to
generate the web site is also used to generate and internet draft that
can be found at &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-jennings-dispatch-spad-v0-00/&#34;&gt;draft-jennings-dispatch-spad-v0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Periodically the information on the master is branched to a versioned draft branch and the content of that branch is used to produce an updated version of the internet draft. A typical cadence for this is monthly
so that the draft can receive broader review.&lt;/p&gt;

&lt;p&gt;When the work is at a good
point to form a stable version of the API, it is progressed through the IETF publication process with the goal of publishing an RFC. Once approved, the
text of the RFC is used to form a released version of the API. The first version would be v1. The current working pre-standard
version is always referred to as v0.  The API includes the version in
the URL so that developers can implement to a specific non-changing
specification. Future versions attempt, but do not guarantee, to be
backwards-compatible with the previous version.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JSON Schema for Results</title>
      <link>https://fluffy.github.io/spad/schemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fluffy.github.io/spad/schemas/</guid>
      <description>&lt;p&gt;The JSON returned from MUST corespond to the following JSON schema.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;$schema&amp;quot;: &amp;quot;http://json-schema.org/draft-04/schema#&amp;quot;,
  &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
  &amp;quot;title&amp;quot;: &amp;quot;SPAD schema.&amp;quot;,
  &amp;quot;properties&amp;quot;: {

      &amp;quot;domain&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
          &amp;quot;title&amp;quot;: &amp;quot;TODO&amp;quot;
      },

      &amp;quot;services&amp;quot;: {
          &amp;quot;type&amp;quot;: &amp;quot;array&amp;quot;,
          
          &amp;quot;items&amp;quot;: {
              &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
              &amp;quot;properties&amp;quot;: {
                  
                  &amp;quot;name&amp;quot;: {
                      &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
                      &amp;quot;title&amp;quot;: &amp;quot;name of service&amp;quot;
                  },
                  
                  &amp;quot;validTill&amp;quot;: {
                      &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
                      &amp;quot;title&amp;quot;: &amp;quot;Expiry time for this SPAD file&amp;quot;
                  },
                  
                  &amp;quot;flows&amp;quot;: {
                      &amp;quot;type&amp;quot;: &amp;quot;array&amp;quot;,
                      &amp;quot;uniqueItems&amp;quot;: false,
                      &amp;quot;title&amp;quot;: &amp;quot;Transport List&amp;quot;,
                      &amp;quot;description&amp;quot;: &amp;quot;List of transports used by the application.&amp;quot;,
                      &amp;quot;items&amp;quot;: {
                          &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot;,
                          &amp;quot;title&amp;quot;: &amp;quot;Flow&amp;quot;,
                          &amp;quot;properties&amp;quot;: {
                              &amp;quot;ips&amp;quot;: {
                                  &amp;quot;type&amp;quot;: &amp;quot;array&amp;quot;,
                                  &amp;quot;uniqueItems&amp;quot;: false,
                                  &amp;quot;title&amp;quot;: &amp;quot;IP addresses list&amp;quot;,
                                  &amp;quot;items&amp;quot;: {
                                      &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
                                      &amp;quot;title&amp;quot;: &amp;quot;IPv4 or v6 address&amp;quot;
                                  }
                              },
                              &amp;quot;port&amp;quot;: {
                                  
                                  &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;,
                                  &amp;quot;maximum&amp;quot;: 65535,
                                  &amp;quot;minimum&amp;quot;: 1,
                                  &amp;quot;title&amp;quot;: &amp;quot;port&amp;quot;,
                                  &amp;quot;description&amp;quot;: &amp;quot;Destination ports used by the transport protocol.&amp;quot;
                                  
                              },
                              &amp;quot;name&amp;quot;: {
                                  &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
                                  &amp;quot;title&amp;quot;: &amp;quot;DNS name&amp;quot;,
                                  &amp;quot;description&amp;quot;: &amp;quot;DNS name that will be used to connect to.&amp;quot;
                                  
                              },
                              &amp;quot;qos&amp;quot;:  {
                                  &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
                                  &amp;quot;title&amp;quot;: &amp;quot;DSCP&amp;quot;,
                                  &amp;quot;description&amp;quot;: &amp;quot;Differentiated Services Code Point to use.&amp;quot;,
                                  &amp;quot;enum&amp;quot;: [
                                      &amp;quot;CS1&amp;quot;,
                                      &amp;quot;DF&amp;quot;,
                                      &amp;quot;EF&amp;quot;,
                                      &amp;quot;AF11&amp;quot;,
                                      &amp;quot;AF21&amp;quot;,
                                      &amp;quot;AF41&amp;quot;,
                                      &amp;quot;AF42&amp;quot;,
                                      &amp;quot;AF43&amp;quot;,
                                      &amp;quot;AF31&amp;quot;,
                                      &amp;quot;AF32&amp;quot;,
                                      &amp;quot;AF33&amp;quot;
                                  ]
                              },
                              &amp;quot;protocols&amp;quot;: {
                                  &amp;quot;title&amp;quot;: &amp;quot;Transport Protocol List&amp;quot;,
                                  &amp;quot;description&amp;quot;: &amp;quot;Protocols used.&amp;quot;,
                                  &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,
                                  &amp;quot;title&amp;quot;: &amp;quot;protocol&amp;quot;,
                                  &amp;quot;enum&amp;quot;: [
                                      &amp;quot;udp&amp;quot;,
                                      &amp;quot;tcp&amp;quot;,
                                      &amp;quot;http&amp;quot;,
                                      &amp;quot;tls&amp;quot;,
                                      &amp;quot;https&amp;quot;,
                                      &amp;quot;quic&amp;quot;
                                  ]
                              }
                          }
                      }
                  }
              }
          }
      }
  },
  &amp;quot;required&amp;quot;: [
    &amp;quot;domain&amp;quot;,
    &amp;quot;services&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>RAML Spec for API</title>
      <link>https://fluffy.github.io/spad/raml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fluffy.github.io/spad/raml/</guid>
      <description>&lt;p&gt;The RAML specification for the API is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#%RAML 0.8
title: SPAD
version: v0
protocols: [ HTTPS ]
baseUri: https://example.com/.well-known/spad/{version}
mediaType: application/json

schemas:
 - spad.json: !include spad-schema.json

documentation:
 - title: Overview
   content: !include overview.md
   
/transports:
  description: Transports used by this service 
  get:
    description: Retrieve the spad 
    responses:
       200:
         description: Return SPAD file - see https://fluffy.github.io/spad/schemas/ 
         body:
          application/json:
            schema: spad.json
            example: !include example1.json
            
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Simple Port and Address Discovery (SPAD)</title>
      <link>https://fluffy.github.io/spad/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fluffy.github.io/spad/overview/</guid>
      <description>&lt;p&gt;Simple Port and Address Discovery (SPAD) allows an web application to
inform others of what ports and IP addresses it uses so that things
like firewalls can correctly re-configure themsleves as the ports and
addresses change. Applications are identified by a domain name which
is used to form a URL in a well known location where a client can do a
HTTP REST call to get a JSON file that describes information about
what addresses and transport the service uses.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>